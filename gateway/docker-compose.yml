services:
  gateway:
    image: traefik:v3.1
    container_name: gateway
    restart: always
    security_opt:
      - no-new-privileges:true
    # network_mode: host
    ports:
      - 80:80
      - 443:443
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./data/traefik.yml:/traefik.yml:ro
      - ./data/acme.json:/acme.json
      - ./data/configurations:/configurations
      - ./logs/:/logs/
    command:
      - "--ping=true"
      - "--ping.entrypoint=traefik"
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.traefik-secure.loadbalancer.server.port=8080"
      - "traefik.http.routers.traefik-secure.rule=Host(`api.joseph.works`)"
      - "traefik.http.routers.traefik-secure.entrypoints=websecure"
      - "traefik.http.routers.traefik-secure.service=api@internal"
      - "traefik.http.routers.traefik-secure.middlewares=user-auth@file"
      - "traefik.http.routers.traefik-secure.tls=true"
    env_file:
      - path: ./.env
        required: true
    networks:
      - traffic_net

  # fail2ban:
  #   image: crazymax/fail2ban:latest
  #   network_mode: host
  #   cap_add:
  #     - NET_ADMIN
  #     - NET_RAW
  #   environment:
  #     - TZ=Asia/Ho_Chi_Minh
  #   volumes:
  #     - ./logs:/var/log/traefik:ro
  #     - ./fail2ban/data:/data

  # prometheus:
  #   image: prom/prometheus:latest
  #   command:
  #     - '--config.file=/etc/prometheus/prometheus.yml'
  #     - '--storage.tsdb.path=/prometheus'
  #     - '--storage.tsdb.retention.size=256MB'
  #   networks:
  #     - infrastructure_net
  #   volumes:
  #     - ./prometheus:/etc/prometheus
  #   ports:
  #     - 9090:9090
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.services.prometheus.loadbalancer.server.port=9090"
  #     - "traefik.http.routers.prometheus.rule=Host(`prometheus.ekila.vn`)"
  #     - 'traefik.http.routers.prometheus.entrypoints=web'

  # influxdb:
  #   image: influxdb:1.8.10
  #   container_name: influxdb
  #   hostname: influxdb
  #   restart: unless-stopped
  #   volumes:
  #     - ./influxdb/data:/var/lib/influxdb
  #     - ./influxdb/influxdb.conf:/etc/influxdb/influxdb.conf:ro
  #     - ./influxdb/init:/docker-entrypoint-initdb.d
  #   networks:
  #     - infrastructure_net
  #   environment:
  #     - INFLUXDB_ADMIN_USER=admin
  #     - INFLUXDB_ADMIN_PASSWORD=Ekila@10724

  # telegraf:
  #   image: telegraf:latest
  #   container_name: telegraf
  #   hostname: telegraf
  #   restart: unless-stopped
  #   networks:
  #     - infrastructure_net
  #   depends_on:
  #     - influxdb
  #   #$(stat -c '%g' /var/run/docker.sock)
  #   user: 1000:{docker_socket_gid}
  #   volumes:
  #     - ./telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
  #     - /:/hostfs:ro
  #     - /etc:/hostfs/etc:ro
  #     - /proc:/hostfs/proc:ro
  #     - /sys:/hostfs/sys:ro
  #     - /var/run/utmp:/var/run/utmp:ro
  #     - /var/run/docker.sock:/var/run/docker.sock:ro
  #   environment:
  #     - HOST_ETC=/hostfs/etc
  #     - HOST_PROC=/hostfs/proc
  #     - HOST_SYS=/hostfs/sys
  #     - HOST_MOUNT_PREFIX=/hostfs

  # loki:
  #   image: grafana/loki:2.9.10
  #   hostname: loki
  #   container_name: loki
  #   volumes:
  #     - ./loki:/etc/loki
  #   restart: unless-stopped
  #   user: 1000:1000
  #   command: -config.file=/etc/loki/loki-config.yml
  #   networks:
  #     - infrastructure_net

  # promtail:
  #   image: grafana/promtail:latest
  #   container_name: promtail
  #   depends_on:
  #     - loki
  #   hostname: promtail
  #   volumes:
  #     - /var/log:/var/log
  #     - ./promtail:/etc/promtail
  #     - ./logs:/var/log/traefik
  #   restart: unless-stopped
  #   networks:
  #     - infrastructure_net
  #   command: -config.file=/etc/promtail/promtail-config.yml

  # grafana:
  #   image: grafana/grafana-enterprise:latest
  #   networks:
  #     - infrastructure_net
  #   volumes:
  #     - ./grafana:/var/lib/grafana
  #     - ./grafana/provisioning/:/etc/grafana/provisioning/
  #   # chmod 472 grafana
  #   user: "472"
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.services.grafana.loadbalancer.server.port=3000"
  #     - "traefik.http.routers.grafana.rule=Host(`{API_GRAFANA_DOMAIN}`)"
  #     - "traefik.http.routers.grafana.entrypoints=websecure"
  #   depends_on:
  #     - influxdb
  #     - loki
  #   environment:
  #     GF_SECURITY_DISABLE_INITIAL_ADMIN_CREATION: "false"
  #     GF_INSTALL_PLUGINS: grafana-piechart-panel

networks:
  infrastructure_net:
    name: infrastructure_net
    driver: bridge
    attachable: true
  traffic_net:
    external: true
