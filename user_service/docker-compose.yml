services:
    web:
        image: josephgotran/user-service:latest
        container_name: user_service
        volumes:
            - /root/traffic_demo/user_service/keys:/app/keys
        restart: always
        command: ./docker-entrypoint.sh -- python manage.py runserver 0.0.0.0:8000
        ports:
            - "8000:8000"
        environment:
            - JWT_KEYS_DIR=/app/keys
            - SECRET_KEY=${SECRET_KEY}
            - DJANGO_SETTINGS_MODULE=django_template.settings.prod
            - DB_HOST=db
            - DB_USER=${DB_DEV_USER}
            - DB_PASSWORD=${DB_DEV_PASSWORD}
            - DB_NAME=${DB_DEV_USER_NAME}
        depends_on:
            - db
        networks:
            - traffic_net

    db:
        image: postgres:14-alpine
        container_name: db
        volumes:
            - django_template_db:/var/lib/postgresql/data
        environment:
            - POSTGRES_USER=${DB_DEV_USER}
            - POSTGRES_PASSWORD=${DB_DEV_PASSWORD}
            - POSTGRES_DB=${DB_DEV_USER_NAME}
        ports:
            - 5432:5432
        networks:
            - traffic_net
    # redis:
    #     image: redis:7.2.3-alpine
    #     volumes:
    #         - ./tmp/redis/data:/data
    #     ports:
    #         - 6379:6379
    # worker:
    #     build: ./
    #     entrypoint: celery
    #     command: -A django_template worker --beat --scheduler django -l info -E
    #     volumes:
    #         - .:/app
    #     environment:
    #         - BROKER_URL=${BROKER_URL}
    #         - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
    #         - CELERY_CACHE_BACKEND=${CELERY_CACHE_BACKEND}
    #     depends_on:
    #         - db
    #         - redis
    # flower:
    #     build: ./
    #     command: celery -A django_template flower
    #     volumes:
    #         - .:/data
    #     working_dir: /data
    #     ports:
    #         - 5555:5555
    #     environment:
    #         - BROKER_URL=${BROKER_URL}
    #         - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
    #     depends_on:
    #         - worker
    #         - redis

volumes:
    django_template_db:

networks:
    traffic_net:
        external: true
